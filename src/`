use regex::Regex;
use std::env;

fn main() {
    let args: Vec<String> = env::args().collect();
    let x: Vec<&str> = args[1].split('\n').collect();
    let regex = Regex::new(r"\d").unwrap();
    let sum = 0;
    for z in x.iter(){
        let matches = regex.find_iter(z).collect::<Vec<_>>();
        if let (Some(first_match), Some(last_match)) = 
        (matches.first(), matches.last()) {
            let result = format!("{}{}", first_match.as_str(), last_match.as_str());
            dbg!(result);
            if let (Ok(parsed_int)) = (result.parse()) {
                sum += parsed_int;
            }
        }
    }
    debg!(sum);
}
